//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
//     author MEIAM
// </auto-generated>
//------------------------------------------------------------------------------
using Meiam.System.Model;
using System.Threading.Tasks;
using System;
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;
using Microsoft.Data.SqlClient;
using System.Data.Common;
using Microsoft.Extensions.Configuration;
using DocumentFormat.OpenXml.Office2013.Word;
using Meiam.System.Common;
using SqlSugar;
using System.Data;
using System.Linq;
using Newtonsoft.Json;
using Meiam.System.Model.Dto;

namespace Meiam.System.Interfaces
{
    /// <summary>
    /// 恒铭达
    /// </summary>
    public class HMDService : BaseService<INSPECT_TENSILE_D>, IHMDService {

        public HMDService(IUnitOfWork unitOfWork) : base(unitOfWork)
        {
        }

        private readonly ILogger<HMDService> _logger;
        private readonly string _connectionString;

        public HMDService(IUnitOfWork unitOfWork, ILogger<HMDService> logger) : base(unitOfWork)
        {
            _logger = logger;
        }


        #region ProcessHMDInspectDataAsync
        public async Task<ApiResponse> ProcessHMDInspectDataAsync(HMDInputDto input) {
            _logger.LogInformation("开始同步恒铭达检测数据");

            try {
                //foreach (var request in requests) {
                //    // 验证数据
                //    ValidateRequest(request);

                //    //判断重复 工单+生产机台号+生产日期+检测类型
                //    bool isExist = Db.Ado.GetInt($@"SELECT count(*) FROM INSPECT_FPI WHERE MESFirstInspectID = '{request.ID}' AND MOID = '{request.MOID}' AND OrgID = '{request.ORGID}'") > 0;
                //    if (isExist) {
                //        _logger.LogWarning($"首检单据已存在: {request.ID}");
                //        continue;
                //    }

                //    // 生成FPI检验单号
                //    var inspectionFpiId = GenerateInspectionFpiId();
                //    _logger.LogInformation("生成检验单号: {InspectionFpiId}", inspectionFpiId);

                //    // 业务处理
                //    _logger.LogDebug("正在处理首检单据...");
                //    ProcessFirstArticleInspection(request, inspectionFpiId);

                //    _logger.LogInformation("工单首检数据同步成功，工单号: {MOID}", request.MOID);
                //}
                await Task.Delay(10);
                _logger.LogInformation("恒铭达检测数据同步完成!");
                return new ApiResponse {
                    Success = true,
                    Message = "恒铭达检测数据同步成功",
                };
            }
            catch (Exception ex) {
                return new ApiResponse {
                    Success = false,
                    Message = $"恒铭达检测数据同步失败：{ex.Message}"
                };
            }
        }
        #endregion

    }
}
