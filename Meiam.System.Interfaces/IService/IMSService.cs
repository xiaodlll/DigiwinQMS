//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
//     author MEIAM
// </auto-generated>
//------------------------------------------------------------------------------
using Meiam.System.Model;
using Meiam.System.Model.Dto;
using System.Collections.Generic;
using System.Threading.Tasks;
using SqlSugar;
using System.Linq;
using System;
using System.Data;

namespace Meiam.System.Interfaces
{
    public interface IMSService : IBaseService<INSPECT_TENSILE_D>
    {
        /// <summary>
        /// ERP收料通知单
        /// </summary>
        /// <param name="request">收料通知单请求数据</param>
        /// <returns>处理结果</returns>
        Task<ApiResponse> ProcessLotNoticeAsync(List<LotNoticeRequest> request);

        /// <summary>
        /// 首检单据
        /// </summary>
        /// <param name="request">首检单据请求数据</param>
        /// <returns>处理结果</returns>
        Task<ApiResponse> ProcessWorkOrderAsync(List<WorkOrderSyncRequest> request);

        /// <summary>
        /// 产品检验结果(入库检)
        /// </summary>
        /// <param name="request">产品检验结果(入库检)请求数据</param>
        /// <returns>处理结果</returns>
        Task<CheckResultResponse> ProcessLotCheckResult(LotCheckResultRequest request);

        /// <summary>
        /// ERP物料数据同步
        /// </summary>
        /// <param name="materials">ERP物料数据同步请求数据</param>
        /// <returns>处理结果</returns>
        Task<MaterialSyncResponse> ProcessMaterialSyncBatch(List<MaterialSyncItem> materials);

        /// <summary>
        /// ERP客户同步
        /// </summary>
        /// <param name="materials">ERP客户同步请求数据</param>
        /// <returns>处理结果</returns>
        Task<CustomerSyncResponse> ProcessCustomersSynBatch(List<CustomerSyncItem> customers);
    }
}
